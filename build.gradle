plugins {
    id 'java-library'
    id "com.github.breadmoirai.github-release" version "2.2.9"
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
}

group 'net.tehbilly'
version '0.2.0'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
    mavenCentral()
}

dependencies {
    compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8"

    testImplementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    testImplementation "org.junit.jupiter:junit-jupiter-api:5.5.1"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:5.5.1"
}

compileJava {
    options.encoding = 'UTF-8'
}

compileTestJava {
    options.encoding = 'UTF-8'
}

javadoc {
    options {
        encoding = 'UTF-8'
        charSet = 'UTF-8'
        author = true
        version = true
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.java.srcDirs
    archiveClassifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    from javadoc.destinationDir
    archiveClassifier = 'javadoc'
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

githubRelease {
    // Stored in ~/.gradle/gradle.properties
    def tokenProp = project.properties['GITHUB_TOKEN']
    if (tokenProp != null) {
        token tokenProp
    }
    releaseAssets jar.getDestinationDirectory().asFileTree
}

test {
    useJUnitPlatform()
    testLogging {
        events 'passed', 'failed', 'skipped'
    }
    afterSuite { desc, result ->
        if (!desc.parent) {
            println ""
            println "Test result: ${result.resultType}"
            println "Test summary: ${result.testCount} tests, " +
                    "${result.successfulTestCount} succeeded, " +
                    "${result.failedTestCount} failed, " +
                    "${result.skippedTestCount} skipped"
        }
    }
}